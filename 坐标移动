wasd移动
输入：A10;S20;W10;D30;X;A1A;B10A11;;A10;
输出：10,-10
#include<bits/stdc++.h>
using namespace std;
int Coordinate_Movement(string str)	//坐标移动函数
{
	int x=0,y=0;	//坐标初始化
	int len=str.size();
	vector<string> vec;  //用来存储分割后的字符串
	int sublen=0;		//记录每个子字符串长度
	for(int i=0;i<len;i++)
	{
		if(str[i]!=';')
		{
			sublen++;
			continue;
		}
		vec.push_back(str.substr(i-sublen,sublen));	//截取;之前的子字符串
		sublen=0;			//长度记录变为0
	}
	for(int i=0;i<vec.size();i++)
	{
		int num=0; 			//若长度为3，则后两位是长度
		if((vec[i].size()==3)&&(vec[i][1]>='0')&&(vec[i][1]<='9')&&(vec[i][2]>='0')&&(vec[i][2]<='9'))
		{
			num=(vec[i][1]-'0')*10+(vec[i][2]-'0');		//移动距离加起来
		}			//若长度为2，则只有一位是长度
		if((vec[i].size()==2)&&(vec[i][1]>='0')&&(vec[i][1]<='9')&&(vec[i][2]>='0')&&(vec[i][2]<='9'))
		{
			num=(vec[i][1]-'0');
		}
		switch(vec[i][0])
		{
			case 'A': x-=num;
				break;
			case 'D': x+=num;
				break;
			case 'W': y+=num;
				break;
			case 'S': y-=num;
				break;
			default;	//如果表达式的值和以上的case后面的值都没有匹配上，那么就执行这里的代码
				break;
		}
	}
		cout<<x<<","<<y<<endl;
	return 0;
}
int main()
{
	string str;
	while(cin>>str)
	{
		Coordinate_Movement(str);
	}
	return 0;
}




